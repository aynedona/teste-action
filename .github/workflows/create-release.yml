name: Criar Release com múltiplas branchs

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Nome da release'
        required: true
        type: string
      historias:
        description: 'IDs das histórias Jira separadas por vírgula'
        required: false
        type: string

permissions:
  contents: write  # Permite push e criação de release com GITHUB_TOKEN

jobs:
  merge-e-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout completo do repositório
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Traz todos os branches e histórico

      - name: Configurar Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Detectar branch principal e criar branch de release
        run: |
          DEFAULT_BRANCH=$(git remote show origin | grep 'HEAD branch' | awk '{print $NF}')
          echo "Branch principal detectado: $DEFAULT_BRANCH"
          git checkout -b release/${{ github.event.inputs.release_name }} origin/$DEFAULT_BRANCH

      - name: Fazer merge das branchs informadas
        run: |
          IFS=',' read -ra IDS <<< "${{ github.event.inputs.historias }}"
          for id in "${IDS[@]}"; do
            BRANCH="feature/$id"
            echo "Fazendo merge da branch $BRANCH"
            git fetch origin $BRANCH
            git merge origin/$BRANCH --no-ff -m "Merge $BRANCH na release"
          done
          git push origin release/${{ github.event.inputs.release_name }}

      - name: Autenticar CLI do GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Criar release no GitHub
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create release/${{ github.event.inputs.release_name }} \
            --title "Release ${{ github.event.inputs.release_name }}" \
            --notes "Release com histórias: ${{ github.event.inputs.historias }}"
