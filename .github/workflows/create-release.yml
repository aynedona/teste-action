name: Criar Release com múltiplas branchs

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Nome da release'
        required: true
        type: string
      historias:
        description: 'IDs das histórias Jira separadas por vírgula'
        required: false
        type: string

jobs:
  merge-e-release:
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout do repositório
      #   uses: actions/checkout@v3
      - name: Clonar repositório manualmente
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          REPO_NAME=$(basename "${{ github.repository }}")
          git clone https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git "$REPO_NAME"
          echo "Repositório clonado em $REPO_NAME"
          echo "cd $REPO_NAME" >> $GITHUB_ENV
        # cd $(basename "${{ github.repository }}")

      - name: Configurar Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Criar branch de release
        working-directory: ${{ env.REPO_NAME }}
        run: |
          git fetch --all
          git checkout -b release/${{ github.event.inputs.release_name }} origin/main

      - name: Fazer merge das branchs informadas
        working-directory: ${{ env.REPO_NAME }}
        run: |
          IFS=',' read -ra IDS <<< "${{ github.event.inputs.historias }}"
          for id in "${IDS[@]}"; do
            BRANCH="feature/$id"
            echo "Fazendo merge da branch $BRANCH"
            git merge origin/$BRANCH --no-ff -m "Merge $BRANCH na release"
          done
          git push origin release/${{ github.event.inputs.release_name }}

      - name: Criar release no GitHub
        working-directory: ${{ env.REPO_NAME }}
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create release/${{ github.event.inputs.release_name }} \
            --title "Release ${{ github.event.inputs.release_name }} \
            --notes "Release com histórias: ${{ github.event.inputs.historias }}"
